//!DO NOT MODIFY MODULE NAME AND PORT NAME!
module nibbleadd(
    input [7:0]A,
    input [7:0]B,
    input ctrl, //when ctrl = 0, output is sum of lowest 4 bits of A and B. 1 then upper 4 bits
    output [4:0]q
);
//YOUR CODE HERE
reg [4:0]value = 0;
always @(*)
begin    
    if (ctrl == 0)
        value = A[3:0] + B[3:0];
    else
        value = A[7:4] + B[7:4];
end
    assign q = value;
endmodule

//testbench here -----------------------------------------------------------------------------------------------//

module nibbleadd_tb();
    reg [7:0]A;
    reg [7:0]B;
    reg ctrl;
    wire [4:0]q;

nibbleadd nibbleadd_u0(
    .A(A[7:0]),
    .B(B[7:0]),
    .ctrl(ctrl),
    .q(q[4:0])
);

always begin //running the test
    A = 8'h24; B = 8'h81;
    #10 A = 8'h09; B = 8'h63;
    #10 A = 8'h0d; B = 8'h8d;
    #10 A = 8'h65; B = 8'h12;
    #10 A = 8'h01; B = 8'h0d;//i stopped here
    #10 A = 8'h76; B = 8'h3d;
    #10 A = 8'hed; B = 8'h8c;
    #10 A = 8'hf9; B = 8'hc6;
    #10 A = 8'hc5; B = 8'haa;
    #10 A = 8'he5; B = 8'h77;
    #10 A = 8'h12; B = 8'h8f;
    #10    
    $stop;
    $finish;
end

initial begin //initialize
    ctrl = 0;
    #50 ctrl = 1;
end
endmodule
