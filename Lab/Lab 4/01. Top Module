`timescale 1ns / 1ps

module top_module(
    input clk,      //12MHz Clock Source;
    input btnR,     //BTNR - RESET System;
    input btnPause,     //BTNPause - PAUSE System;
    input pio1,
    input pio2,
    output [6:0] seg,// 7-Segment - Segment[6:0];
    output dp,      // 7-Segment - Segment-DP;
    output [3:0] an, // 7-Segment - Common Anode;
    output [1:0] led,
    output led0_r,
    output led0_g
);
  
wire rstn;
assign rstn=~btnR;


wire clk_1hz;
wire clk_500hz;
wire clk_1hz_2;
wire [15:0] bcd_time;
wire [7:0] Csegment;
wire state;
//optimize clock

sensor_array SA1(clk, rstn, pio1, pio2, led0_r, led0_g, state);

clk_tree #(.COUNTER(12000)) clk_blk_500hz_1(clk,1,rstn,~btnPause,0,clk_1hz,clk_500hz); //no pause
clk_tree #(.COUNTER(250)) clk_blk_1hz_1(clk_500hz,state,rstn,~btnPause,1,clk_1hz_2,clk_1hz); 
clk_tree #(.COUNTER(250)) clk_blk_1hz_2(clk_500hz,1,rstn,~btnPause,0,clk_1hz,clk_1hz_2);
//                                      clk,state,reset, pause, counter, bool, clk_out
timer timer_0(rstn,clk_1hz,bcd_time);
segment segment_0(rstn,clk_500hz,bcd_time,an,Csegment);

//assign led0_r = led_r;
//assign led0_g = led_g;
assign seg[6:0] = Csegment[6:0];
assign dp = Csegment[7];
assign led[0] = bcd_time[0]; //Second Unit modulus 2
assign led[1] = ~bcd_time[0]; //Second Unit modulus 2

endmodule
